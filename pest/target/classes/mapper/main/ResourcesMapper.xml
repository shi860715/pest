<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.isoftstone.mapper.main.ResourcesMapper">
  <resultMap id="BaseResultMap" type="com.isoftstone.entity.model.Resources">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="resUrl" jdbcType="VARCHAR" property="resurl" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="parentId" jdbcType="INTEGER" property="parentid" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
  </resultMap>

  <select id="queryAll" resultType="com.isoftstone.entity.model.Resources">
      	SELECT id,name,parentId,resUrl,type,sort
		FROM t_resources
		ORDER BY sort ASC
  </select>

    <select id="loadUserResources" parameterType="java.util.HashMap" resultType="com.isoftstone.entity.model.Resources">
        SELECT re.id,re.name,re.parentId,re.resUrl, re.icon
        FROM t_resources re LEFT JOIN t_role_resources rr
        ON re.id = rr.resourcesId
        LEFT JOIN t_user_role ur
        ON rr.roleId =ur.roleId
        WHERE ur.userId=#{userid}
        <if test="type != null">
            AND re.type= #{type}
        </if>
        GROUP BY re.id
        ORDER BY re.sort ASC
    </select>

    <select id="queryResourcesListWithSelected" parameterType="int" resultType="com.isoftstone.entity.model.Resources">
        SELECT re.id,re.name,re.parentId,re.resUrl,re.type,
		(CASE WHEN EXISTS(SELECT 1
		FROM t_role_resources rr WHERE rr.resourcesId=re.id AND rr.roleId=#{rid})
		THEN 'true' ELSE 'false' END) AS checked
		FROM t_resources re
		WHERE re.parentId !=0
		ORDER BY re.sort ASC
    </select>
    
    <delete id="delResources" >
    	DELETE FROM t_resources WHERE id in
    	<foreach collection="idList" item="id" index="index" open="(" separator="," close=")">  
			#{id}
		</foreach>
    </delete>
</mapper>